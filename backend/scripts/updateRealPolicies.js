import mongoose from 'mongoose';
import dotenv from 'dotenv';
dotenv.config();

async function updatePoliciesWithRealContent() {
  try {
    await mongoose.connect(process.env.MONGODB_URI);
    
    const db = mongoose.connection.db;
    
    // المحتوى الحقيقي المُفصل من المستخدم
    const realPoliciesContent = {
      terms: `السياسات الرسمية – بصمة تصميم

نحن نلتزم بتقديم خدمات احترافية وفق ضوابط واضحة تحفظ حقوق الطرفين. يرجى قراءة البنود التالية بعناية قبل إتمام أي طلب.

هذه الوثيقة تُعد مرجعًا ملزمًا لكل من يطلب خدمة من "بصمة تصميم"، وتُطبق على جميع التعاملات دون استثناء.

1. ملكية المحتوى والتصاميم
• جميع التصاميم، المحتوى، العبارات، والأساليب اللفظية المعروضة في الموقع أو المنفذة للعميل تُعد ملكًا حصريًا لـ "بصمة تصميم"، ما لم يتم الاتفاق كتابيًا على نقل الملكية.
• يُمنع نسخ أو إعادة استخدام أي جزء من الموقع أو التصاميم أو العبارات التسويقية دون إذن كتابي مسبق.
• أي محاولة لاستخدام المحتوى أو التصاميم خارج نطاق الاتفاق تُعد انتهاكًا قانونيًا وتُعرض صاحبها للمساءلة.

2. سياسة الطلب والتنفيذ
• يُشترط إتمام الدفع الكامل قبل بدء تنفيذ أي خدمة.
• بعد الدفع، يتم التواصل حصريًا عبر واتساب لتوضيح تفاصيل الطلب.
• يُلزم العميل بتقديم رقم الطلب أو البريد الإلكتروني المستخدم في الدفع عند التواصل، لضمان التحقق من الهوية وربط الطلب بالتنفيذ.
• لا يتم تنفيذ أي طلب غير واضح أو غير مكتمل، ويُحمّل العميل مسؤولية التأخير الناتج عن نقص المعلومات.

9. السلوك المهني والتعامل الأخلاقي
• يُتوقع من جميع العملاء الالتزام بأدب التواصل واحترام الفريق أثناء المحادثات.
• أي تجاوز لفظي، إساءة، أو تعامل غير مهني يُعد مخالفة مباشرة ويمنح "بصمة تصميم" الحق في إيقاف الخدمة دون تعويض.
• نحن نؤمن أن الاحترام المتبادل أساس كل تعاون ناجح، وأي إخلال بهذا المبدأ يُعتبر إشكالية تعاقدية.

10. رفض الطلبات
• تحتفظ "بصمة تصميم" بحق رفض أي طلب لا يتوافق مع معايير الجودة أو الأسلوب المعتمد، دون الحاجة لتبرير.
• في حال رفض الطلب قبل الدفع، لا يُلزم الطرفان بأي التزام.
• في حال رفض الطلب بعد الدفع بسبب مخالفة واضحة، يتم التعامل مع الحالة وفقًا لتقدير الإدارة.`,

      refund: `4. سياسة الإلغاء والاسترداد
• جميع الخدمات غير قابلة للإلغاء أو الاسترداد بعد إتمام الدفع.
• لا يُقبل أي طلب استرجاع أو تعديل في وسيلة الدفع بعد تنفيذ العملية.
• يُعد الدفع موافقة صريحة ونهائية على شروط الخدمة.

8. التزامات العميل
• يُلزم العميل بتقديم معلومات واضحة ودقيقة عند طلب الخدمة.
• أي تأخير في الرد أو توضيح التفاصيل يُؤثر على مدة التنفيذ، ولا تتحمل "بصمة تصميم" مسؤولية ذلك.
• يُعتبر العميل مسؤولًا عن مراجعة الملفات المستلمة خلال 24 ساعة من التسليم، وأي ملاحظات بعد ذلك تُعد خارج نطاق الخدمة.`,

      privacy: `6. سياسة الاستخدام التجاري
• جميع التصاميم تُسلّم بحق الاستخدام التجاري، ما لم يُذكر خلاف ذلك.
• يُمنع إعادة بيع أو توزيع أي تصميم أو محتوى دون إذن كتابي مسبق من "بصمة تصميم".
• تحتفظ "بصمة تصميم" بحق عرض الأعمال المنفذة ضمن معرض الأعمال، ما لم يطلب العميل خلاف ذلك بشكل صريح.

نحترم خصوصية عملائنا ولا نشارك معلوماتهم الشخصية مع أي طرف ثالث إلا بموافقتهم الصريحة أو عند الضرورة القانونية.`,

      delivery: `3. سياسة التعديل
• يُسمح بتعديلين فقط لكل خدمة، بشرط أن يكون ضمن نطاق الطلب الأصلي، وأن يُطلب خلال مدة أقصاها 24 ساعة من وقت التسليم.
• أي تعديل إضافي أو خارج النطاق يُعتبر خدمة مستقلة ويُحاسب عليها بشكل منفصل.
• لا تُنفّذ التعديلات غير المبررة أو التي تُخالف الأسلوب المتفق عليه.

5. سياسة التسليم
• يتم تسليم الملفات بصيغ محددة حسب نوع الخدمة، وتشمل: PNG – PDF – DOCX – روابط مباشرة أو عبر البريد الإلكتروني، أخرى..
• صيغة التسليم تُحدد أثناء التواصل بعد الدفع.
• مدة التسليم تختلف حسب نوع الخدمة، وتُوضح بوضوح أسفل كل خدمة في صفحة "خدماتنا".

7. سياسة التواصل
• يتم التواصل حصريًا عبر واتساب بعد إتمام الدفع.
• لا يتم الرد على الطلبات غير المدفوعة أو غير المكتملة.
• فريق الدعم متاح خلال ساعات العمل الرسمية: من الساعة 10 صباحًا حتى 10 مساءً بتوقيت السعودية.`
    };
    
    let updatedCount = 0;
    
    // تحديث كل سياسة
    for (const [key, content] of Object.entries(realPoliciesContent)) {
      const result = await db.collection('settings').updateOne(
        { key, category: 'policies' },
        {
          $set: {
            value: content,
            updatedAt: new Date()
          }
        }
      );
      
      if (result.modifiedCount > 0) {
        updatedCount++;
      } else {
      }
    }
    
    
    // التحقق من النتائج
    const updatedPolicies = await db.collection('settings').find({category: 'policies'}).toArray();
    updatedPolicies.forEach(policy => {
      const preview = policy.value.substring(0, 80) + '...';
    });
    
    mongoose.disconnect();
  } catch (error) {
  }
}

updatePoliciesWithRealContent();
