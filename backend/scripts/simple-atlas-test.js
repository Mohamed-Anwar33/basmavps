import mongoose from 'mongoose';

const ATLAS_URI = 'mongodb+srv://basmatdesign:basma1234@cluster0.0wetdkc.mongodb.net/basma_db?retryWrites=true&w=majority&appName=Cluster0';

console.log('๐ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจู MongoDB Atlas...');

async function testConnection() {
  try {
    console.log('โณ ุฌุงุฑู ุงูุงุชุตุงู...');
    
    await mongoose.connect(ATLAS_URI, {
      serverSelectionTimeoutMS: 5000,
    });
    
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุฌุงุญ ุจู MongoDB Atlas!');
    
    // Test basic operation
    const db = mongoose.connection.db;
    console.log(`๐ ุงุณู ูุงุนุฏุฉ ุงูุจูุงูุงุช: ${db.databaseName}`);
    
    // List collections
    const collections = await db.listCollections().toArray();
    console.log(`๐ ุนุฏุฏ ุงููุฌููุนุงุช: ${collections.length}`);
    
    if (collections.length > 0) {
      console.log('๐ ุงููุฌููุนุงุช ุงูููุฌูุฏุฉ:');
      for (const collection of collections) {
        const count = await db.collection(collection.name).countDocuments();
        console.log(`  โข ${collection.name}: ${count} ุนูุตุฑ`);
      }
    } else {
      console.log('๐ญ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุงุฑุบุฉ - ุฌุงูุฒุฉ ูุงุณุชูุจุงู ุงูุจูุงูุงุช');
    }
    
    console.log('\n๐ MongoDB Atlas ุฌุงูุฒ ููุงุณุชุฎุฏุงู!');
    
  } catch (error) {
    console.error('โ ูุดู ุงูุงุชุตุงู:', error.message);
    
    if (error.message.includes('IP')) {
      console.error('\n๐ก ุงูุญู ุงูููุชุฑุญ:');
      console.error('1. ุงุฐูุจ ุฅูู MongoDB Atlas Dashboard');
      console.error('2. ุงุฎุชุฑ Network Access');
      console.error('3. ุฃุถู IP Address ุงูุญุงูู ุฃู ุงุฎุชุฑ "Allow access from anywhere"');
    }
    
    process.exit(1);
  } finally {
    await mongoose.disconnect();
  }
}

testConnection();
